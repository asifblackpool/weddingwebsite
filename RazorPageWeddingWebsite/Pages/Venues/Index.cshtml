@page
@using Blackpool.Zengenti.CMS.Helpers
@using Blackpool.Zengenti.CMS.Models.Canvas.Helpers;
@using Blackpool.Zengenti.CMS.Models.Canvas.Code
@using Blackpool.Zengenti.CMS.Models.Canvas.Headers
@using Blackpool.Zengenti.CMS.Models.Canvas.Paragraphs
@using RazorPageWeddingWebsite.Helpers
@using Blackpool.Zengenti.CMS.Models.Weddings;
@using Blackpool.Zengenti.CMS.Models.GenericTypes;

@model RazorPageWeddingWebsite.Pages.Venues.IndexModel
@{
    GettingMarried? entryModel = (Model != null && Model.Items.Count == 1) ? Model.Items.FirstOrDefault() : null;
    SerialisedContent? canvas = (entryModel != null) ? entryModel.GetSerialisedCanvas() : null;

}

<div class="content-container">
@if (entryModel != null && canvas != null)
{



    foreach(SerialisedItem item in canvas.Items)
    {
        if (item.ClassName == typeof(HeadingComponent).Name)
        {
            HeadingComponent objItem = SerializationHelper.Deseralize(item);
            HeadingProperties? properties = (objItem != null) ? objItem.Properties : null;

            if (objItem != null)
            {
                if (properties?.Level != null && properties?.Level == 1)
                {
                    <h1 class="h1-title txt-align-responsive">@objItem?.TextValue</h1>
                }

                if (properties?.Level != null && properties?.Level == 1)
                {
                    <h2 class="h2-title txt-align-responsive">@objItem?.TextValue</h2>
                }

                //default value
                if (properties == null)
                {
                    <h1 class="h1-title txt-align-responsive">@objItem?.TextValue</h1>
                }
            }
        }

        if (item.ClassName == typeof(CanvasParagraph).Name)
        {
            CanvasParagraph objItem = SerializationHelper.Deseralize(item);
            <p class="pad-bottom-default shade-black txt-align-responsive" >@objItem.Value</p>

        }

        if (item.ClassName == typeof(Code).Name)
        {
            Code objItem = SerializationHelper.Deseralize(item);
            if (objItem.Value != null && objItem.Value.Code != null)
            {
                @Html.Raw(objItem.Value.Code)<br/><br/>
            }   
        }

        if (item.ClassName == typeof(FragmentParagraph).Name)
        {
            FragmentParagraph objItem = SerializationHelper.Deseralize(item);
       
            <p class="venues-list">@Html.Raw(ParagraphHelper.FragmentParagraph(NavigationLinkHelper.GetLinkUrl(objItem)))</p>

        }

    }
}
</div>

